---
title: "Welcome & get ready for the course"
subtitle: "ds4owd - data science for the course"
author: "Lars Schöbitz"
date: "2023-11-07"
format: 
  revealjs: 
    theme: slides.scss
    transition: fade
    slide-number: true
    logo: ../img/OWD-logo-20.png
    chalkboard: true
footer: "[{{< fa link >}} ds4owd-001.github.io/website/](https://ds4owd-001.github.io/website/)"
editor: source
execute:
  freeze: auto
params:
    week: 2
editor_options: 
  chunk_output_type: console
---

```{r}
#| include: false
library(countdown)
library(ggplot2)
library(readr)
library(ggplot2)
library(gapminder)
library(dplyr)
```

```{r} 

gapminder_yr_2007 <- gapminder |> 
  filter(year == 2007)

my_colors <- c("#ED6D37", "#901C6C", "#18A5C5", "#A6CE8F")

```

## {background-image="img/lec-02/r_rollercoaster.png" background-size="contain"} 

::: {.aside}
Artwork by [@allison_horst](https://twitter.com/allison_horst) 
:::

# Solving coding problems {background-color="#0F4C81"}

## Tipps for search engines 

- Use actionable verbs that describe what you want to do
- Be specific 
- Add R to the search query 
- Add the name of the R package name to the search query
- Scroll through the top 5 results (don't just pick the first)

**Example: "How to remove a legend from a plot in R ggplot2"**

## Stack Overflow

::: {.incremental}

:::: {.columns}

::: {.column width="47.5%"}

**What is it?**

- The biggest support network for (coding) problems 
- Can be intimidating at first
- Up-vote system 

:::

::: {.column width="5%"}

:::

::: {.column width="47.5%"}

**Workflow**

- First, briefly read the question that was posted
- Then, read the answer marked as "correct"
- Then, read one or two more answers with high votes
- Then, check out the "Linked" posts 
- Always give credit for the solution

:::

::::

:::

## Give credit

![](img/lec-02/stack-overflow-share-1.png)

## Give credit

![](img/lec-02/stack-overflow-share-2.png)

## Give credit {.smaller}

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "5-6"
ggplot(data = global_waste_data_kg_year,
       mapping = aes(x = income_id, 
                     y = capita_kg_year,
                     color = income_id)) +
  ## Remove legend ref: https://stackoverflow.com/a/35622358/6816220
  theme(legend.position = "none")

```

## Other sources for help

:::: {.columns}

::: {.column width="50%"}

- The [Canvas Discussion pages](https://canvas.colorado.edu/courses/94577/discussion_topics)
- RStudio Community Forum: https://community.rstudio.com/
- Documentation websites: https://dplyr.tidyverse.org/
- Twitter community: [#rstats](https://twitter.com/search?q=%23rstats&src=typd) 
:::

::: {.column width="50%"}

![](img/lec-02/welcome_to_rstats_twitter.png)

:::

::::

::: aside
Artwork by [@allison_horst](https://www.allisonhorst.com/)
:::

## Minimal reproducible example (reprex)

- Needed when asking questions online
- Good support information: https://www.tidyverse.org/help/#reprex

## {background-image="img/lec-02/code_hero.jpg" background-size="contain"} 

::: aside
Artwork by [@allison_horst](https://www.allisonhorst.com/)
:::

# Homework assignment solutions

## remember: `git clone`  

![](img/lec-02/illustration-slides-git-pull/illustration-slides-git-pull.001.png)


## remember: `git commit` 

![](img/lec-02/illustration-slides-git-pull/illustration-slides-git-pull.002.png)

## remember: `git push` 

![](img/lec-02/illustration-slides-git-pull/illustration-slides-git-pull.003.png)

## remember: `git push` 

![](img/lec-02/illustration-slides-git-pull/illustration-slides-git-pull.004.png)

## collaborate: `git clone`

![](img/lec-02/illustration-slides-git-pull/illustration-slides-git-pull.005.png)

## track work: `git commit` 

![](img/lec-02/illustration-slides-git-pull/illustration-slides-git-pull.006.png)

## update: `git ???` 

![](img/lec-02/illustration-slides-git-pull/illustration-slides-git-pull.007.png)

## update: `git push`

![](img/lec-02/illustration-slides-git-pull/illustration-slides-git-pull.008.png)

## `git ???` 

![](img/lec-02/illustration-slides-git-pull/illustration-slides-git-pull.009.png)

## new: `git pull`

![](img/lec-02/illustration-slides-git-pull/illustration-slides-git-pull.010.png)

## Learning Objectives (for this week)

```{r}

lobj1 <- readr::read_csv(here::here("data/tbl-02-ds4owd-001-learning-objectives.csv")) |>
  dplyr::filter(week == params$week) |>
  dplyr::pull(learning_objectives)

```


1. `r lobj1[1]`
1. `r lobj1[2]`
1. `r lobj1[3]`
1. `r lobj1[4]`
1. `r lobj1[5]`

# Data Science Lifecycle {background-color="#0F4C81"}

## Deep End

<div style="width:100%;height:0;padding-bottom:56%;position:relative;"><iframe src="https://giphy.com/embed/3pWRgRw86JyBa" width="75%" height="75%" style="position:absolute" frameBorder="0" class="giphy-embed" allowFullScreen></iframe></div><p><a href="https://giphy.com/gifs/matthew-west-all-in-matthew-west-3pWRgRw86JyBa">via GIPHY</a></p>

## - {background-image="img/lec-02/data-science-lifecycle/data-science-lifecycle.001.png" background-size="contain"}

::: {.notes}

Add notes

:::

## - {background-image="img/lec-02/data-science-lifecycle/data-science-lifecycle.002.png" background-size="contain"}

::: {.notes}

1. First you must import your data into R. This typically means that you take data stored:

- in a file
- in a database, 
- or web application, and load it into R. 

2. If you can get your data into R, you can  do data science on it!

:::

## - {background-image="img/lec-02/data-science-lifecycle/data-science-lifecycle.003.png" background-size="contain"}

::: {.notes}

1. Once you’ve imported your data, it is a good idea to tidy it. 

2. This means to get it into a structure that lets you focus on the questions about your data and not the format it needs to be in

3. This is the step where we spend by far the biggest amount of our time. 

4. It has been estimated that we spend about 80% of our time with cleaning and tidying data, so that we can use it fo our analyses.

5. In my courses you will learn how to structure your data in a tidy format as you collect it, and before you import it. A highly underestimated skill.

:::

## - {background-image="img/lec-02/data-science-lifecycle/data-science-lifecycle.004.png" background-size="contain"}

::: {.notes}

1. Once your data is tidy, a common first step is to transform it.

2. This includes 
- narrowing in on what interests you (like all people without toilets in one district, or all data from last year)
- creating new variables from existing (like toilet density, as in number of people per toilet) 
- calculating summary statistics (like counts or the mean)

Together, tidying and transforming are called wrangling, because getting your data in a form that’s natural to work with often feels like a fight!

:::

## - {background-image="img/lec-02/data-science-lifecycle/data-science-lifecycle.005.png" background-size="contain"}

::: {.notes}

1. Once you have tidy data with the variables you need, there are two main engines of knowledge generation: 

- visualisation 
- and modelling. 

2. These have complementary strengths and weaknesses so any real analysis will iterate between them many times.

3. Visualisation is a fundamentally human activity. A good visualisation will show you things that you did not expect, or raise new questions about the data.

:::

## - {background-image="img/lec-02/data-science-lifecycle/data-science-lifecycle.006.png" background-size="contain"}

::: {.notes}

1. Models are complementary tools to visualisation. Once you have made your questions sufficiently precise, you can use a model to answer them.

2. In my courses, they play a very small part, but I am confident that you will be able to enhance your knowledge on modelling once you understand the basic principles of using the R lanuage.

:::

## - {background-image="img/lec-02/data-science-lifecycle/data-science-lifecycle.007.png" background-size="contain"}

::: {.notes}

1. The last step of data science is communication, an absolutely critical part of any data analysis project. 

2. It doesn’t matter how well your models and visualisation have led you to understand the data, unless you can also communicate your results to others.

3. And this is a part where R has become really strong.

:::

# Exploratory Data Analysis with `ggplot2` {background-color="#0F4C81"}

## R Package `ggplot2`

:::: {.columns}

::: {.column width="50%"}

- **ggplot2** is tidyverse's data visualization package 
- `gg` in `ggplot2` stands for Grammar of Graphics 
- Inspired by the book **Grammar of Graphics** by Leland Wilkinson
- **Documentation:** https://ggplot2.tidyverse.org/
- **Book**: https://ggplot2-book.org

:::

::: {.column width="50%"}

![](img/lec-02/ggplot2-part-of-tidyverse.png)

```{r}
#knitr::include_graphics(here::here("slides/img/lec-02/ggplot2-part-of-tidyverse.png"))
```

:::

::::

::: {.aside}

Slide adapted from datasciencebox.org

:::

## Code structure

- `ggplot()` is the main function in ggplot2
- Plots are constructed in layers
- Structure of the code for plots can be summarized as

```{r}
#| eval: false
#| echo: true

ggplot(data = [dataset], 
       mapping = aes(x = [x-variable], 
                     y = [y-variable])) +
   geom_xxx() +
   other options
```

## Code structure {auto-animate="true"}

```{r}
#| echo: true
ggplot()
```

## Code structure {auto-animate="true"}

```{r}
#| echo: true
ggplot(data = gapminder_yr_2007)
```

## Code structure {auto-animate="true"}

```{r}
#| echo: true
ggplot(data = gapminder_yr_2007,
       mapping = aes()) 

```

## Code structure {auto-animate="true"}

```{r}
#| echo: true
ggplot(data = gapminder_yr_2007,
       mapping = aes(x = continent,
                     y = lifeExp))  

```

## Code structure {auto-animate="true"}

```{r}
#| echo: true
ggplot(data = gapminder_yr_2007,
       mapping = aes(x = continent,
                     y = lifeExp)) +
  geom_boxplot() 

```

## Code structure {auto-animate="true"}

```{r}
#| echo: true
ggplot(data = gapminder_yr_2007,
       mapping = aes(x = continent,
                     y = lifeExp)) +
  geom_boxplot() +
  theme_minimal()

```

## Code structure {auto-animate="true"}

```{r}
#| echo: true
ggplot(data = gapminder_yr_2007,
       mapping = aes(x = continent,
                     y = lifeExp)) +
  geom_boxplot() +
  theme_minimal(base_size = 14)

```

# Live Coding Exercise: Reproduce this plot {background-color="#0F4C81"}

## {background-image="img/lec-02/plot-waste-generation-gdp.png" background-size="contain"} 

## live-02a-data-visualiation 

1. Head over to rstudio.cloud
2. Open the workspace for the course (cven5837-ss22)
3. Open "Projects"
4. Open the "course-materials" project
5. Follow along with me

## Break

![](img/lec-01/coffee-break.jpg)

```{r}

countdown(
  minutes = 10, seconds = 0,
  left = 0, right = 0,
  padding = "10px", margin = "5%",
  font_size = "2em"
)

```

::: aside
Photo by [Blake Wisz](https://unsplash.com/@blakewisz)
:::


# Visualising numerical data {background-color="#0F4C81"}

## Types of variables 

::: {.incremental}

:::: {.columns}

::: {.column width="50%"}

### numerical

**discrete variables**

- non-negative
- whole numbers
- e.g. number of students, roll of a dice

**continuous variables**

- infinite number of values
- also dates and times
- e.g. length, weight, size 

:::

::: {.column width="50%"}

### non-numerical

**categorical variables**

- finite number of values 
- distinct groups (e.g. EU countries, continents)
- **ordinal** if levels have natural ordering (e.g. week days, school grades)

:::

::::

:::

## {background-image="https://d33wubrfki0l68.cloudfront.net/1e7033393a2c70dc1255c5d0f1c563e945519251/61035/img/evol-ggplot/evol-ggplot-1.gif" background-size="contain"}

::: {.aside}

**Tutorial:** https://www.cedricscherer.com/2019/05/17/the-evolution-of-a-ggplot-ep.-1/

:::

## data-to-viz.com 

# Data Collection Tools {background-color="#0F4C81"}

## Data Collection Tools

- Questionnaires for survey based data 
- Spreadsheets for manual experimental/observational data
- Sensors for automated near real-time data 

## Survey tools

**Commonly used in the Global Engineering and Development sector**

- KOBO Toolbox
- mWater
- OpenDataKit

## Data Organisation in Spreadsheets

```{r}
knitr::include_graphics("img/lec-02/data-org-paper.png")
```

::: {.aside}
Jorunal: The American Statistician, [Screenshot taken on 2022-03-23](https://www.tandfonline.com/doi/full/10.1080/00031305.2017.1375989?src=)
:::

## Data Organisation in Spreadsheets

Read the paper (it's part of your homework), but you can also:

- Go through the annotated slides: https://kbroman.org/Talk_DataOrg/dataorg_notes.pdf 
- Watch Karl Broman give the talk (02:36 to 45:00): https://youtu.be/t74E0a90gkA?t=156
- Read the content on a website: https://kbroman.org/dataorg/

## But, especially apply it to your data

<div style="width:100%;height:0;padding-bottom:100%;position:relative;"><iframe src="https://giphy.com/embed/UEGwYCVTBFa9tJEf66" width="50%" height="50%" style="position:absolute" frameBorder="0" class="giphy-embed" allowFullScreen></iframe></div><p><a href="https://giphy.com/gifs/rainbow-computer-data-UEGwYCVTBFa9tJEf66">via GIPHY</a></p>

## Why? 

**Because it will make your life easier!**

```{r, out.width="75%"}
knitr::include_graphics("img/lec-02/data-org-views.png")
```

::: {.aside}
Jorunal: The American Statistician, [Screenshot taken on 2022-07-11](https://www.tandfonline.com/toc/utas20/current#b7689c1d-7975-46ed-aaf9-3a2939834054-b6de7b7c-de82-45a5-9538-313dd15c6659)]
:::

## License? CC0 (!)

```{r, out.width="75%"}
knitr::include_graphics("img/lec-02/data-org-license.png")
```
::: {.aside}
Karl Broman, GitHub repo broman/Talk_DataOrg, [Screenshot taken on 2022-03-23](https://github.com/kbroman/Talk_DataOrg)
:::

# Homework week 2 {background-color="#0F4C81"}

## Bring your own data

- Generate data doing a short survey or observational study  
- Find a data online that interests you
- Use a dataset that you already have available

## Homework due dates

- All material on [course website](https://cven5873-ss23.github.io/website/weeks/wk-02.html)
- Homework assignment & learning reflection due: **Friday, June 23th** 

# Thanks! `r emo::ji("sunflower")`  {background-color="#0F4C81"}

## 

Slides created via revealjs and Quarto: https://quarto.org/docs/presentations/revealjs/ 
Access slides as [PDF on GitHub](https://github.com/cven5873-ss23/website/raw/main/slides/lec-02-visualiation.pdf)

All material is licensed under [Creative Commons Attribution Share Alike 4.0 International](https://creativecommons.org/licenses/by-sa/4.0/). 

